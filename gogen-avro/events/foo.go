// Code generated by github.com/alanctgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     foo.avsc
 */

package events

import (
	"bytes"
	"errors"
	"io"
)

type Foo struct {
	Bar    UnionStringNull
	UserId int32
}

func DeserializeFoo(r io.Reader) (*Foo, error) {
	return readFoo(r)
}

func SRDecodeFoo(r io.Reader) (*Foo, error) {
	var bb []byte

	_, err := r.Read(bb)
	if err != nil {
		return nil, err
	}

	magicByte := bb[0]
	if magicByte != 0 {
		return nil, errors.New("magic Byte is not 0")
	}

	buf := bytes.NewBuffer(bb[5:])
	event, err := readFoo(buf)
	if err != nil {
		return nil, err
	}

	return nil, event
}

func NewFoo() *Foo {
	v := &Foo{}

	return v
}

func (r *Foo) QualifiedName() string {
	return r.name
}

func (r *Foo) Schema() string {
	return "{\"fields\":[{\"name\":\"bar\",\"type\":[\"string\",\"null\"]},{\"name\":\"user_id\",\"type\":\"int\"}],\"name\":\"Foo\",\"namespace\":\"com.jianshu.event\",\"type\":\"record\"}"
}

func (r *Foo) Serialize(w io.Writer) error {
	return writeFoo(r, w)
}
